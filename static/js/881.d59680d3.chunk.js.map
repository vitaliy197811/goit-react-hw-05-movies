{"version":3,"file":"static/js/881.d59680d3.chunk.js","mappings":"wQACA,EAAuB,qBAAvB,EAAqD,uBAArD,EAAmF,qBAAnF,EAA+G,qBAA/G,EAA4I,sBAA5I,EAA2K,uB,SC8D3K,EAzDe,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BP,EAAAA,EAAAA,WAAS,GAAvC,eAAOQ,EAAP,KAAgBC,EAAhB,KAaMC,EAAcJ,EAAaK,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WAAM,wCAGZ,mGAEQV,EAFR,UAEwBW,EAAAA,EAAAA,IAAeH,GAFvC,kFAIQI,QAAQC,IAAR,MAJR,yBAMQN,GAAW,GANnB,6EAHY,sBACPC,IACLD,GAAW,GAFC,mCAYZO,GACH,GAAE,CAACN,IAEJ,IAAMO,GAAWC,EAAAA,EAAAA,MAEjB,OACI,iBAAKC,UAAWC,EAAhB,WACI,kBAAMC,SA3BC,SAAAC,GACXA,EAAEC,iBACFhB,EAAgB,CAAEJ,MAAOA,IACzBC,EAAS,GACZ,EAuBO,WACI,kBAAOe,UAAWC,EAAWI,KAAK,OAAOC,MAAOtB,EAAOuB,SAhClD,SAAAJ,GACblB,EAASkB,EAAEK,cAAcF,MAAMG,cAClC,KA+BW,mBAAQT,UAAWC,EAAYI,KAAK,SAApC,uBAEHhB,IAAW,SAACqB,EAAA,EAAD,IACD,KAAV1B,GAAmC,IAAlBF,EAAO6B,SAAgB,kEACxC7B,IACG,eAAIkB,UAAWC,EAAf,SACKnB,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,eAAad,UAAWC,EAAxB,UACI,SAAC,KAAD,CAAMD,UAAWC,EAAUc,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMnB,GAA/D,SAA4EgB,KADvED,EADD,QAS/B,C,8LC3DKK,EAAM,gCACNC,EAAM,mCAECC,EAAW,mCAAG,sGACAC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAA8CC,EAA9C,oBADA,uBACfG,EADe,EACfA,KADe,kBAEhBA,EAAKC,SAFW,2CAAH,qDAKX7B,EAAc,mCAAG,WAAOV,GAAP,yFACHqC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAAyCC,EAAzC,kBAAsDnC,EAAtD,+CADG,uBAClBsC,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,sDAKdC,EAAU,mCAAG,WAAOX,GAAP,yFACCQ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAyBL,EAAzB,oBAAuCM,EAAvC,oBADD,uBACdG,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKVG,EAAM,mCAAG,WAAOZ,GAAP,yFACKQ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA0BL,EAA1B,4BAAgDM,EAAhD,oBADL,uBACVG,EADU,EACVA,KADU,kBAEXA,EAAKI,MAFM,2CAAH,sDAKNC,EAAS,mCAAG,WAAOd,GAAP,yFACEQ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA0BL,EAA1B,4BAAgDM,EAAhD,2BADF,uBACbG,EADa,EACbA,KADa,kBAEdA,EAAKC,SAFS,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","service/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__hqYjd\",\"movies\":\"Movies_movies__TE99a\",\"item\":\"Movies_item__Ba4aJ\",\"link\":\"Movies_link__MzAfU\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation  } from 'react-router-dom';\nimport { getSearchQuery } from 'service/api';\nimport Loader from 'components/Loader/Loader';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [loading, setLoading] = useState(false);\n\n\n    const onChange = e => {\n        setQuery(e.currentTarget.value.toLowerCase());\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        setSearchParams({ query: query });\n        setQuery('');\n    };\n\n    const movieSearch = searchParams.get('query');\n\n    useEffect(() => {\n        if (!movieSearch) return;\n        setLoading(true);\n        async function renderMovies() {\n            try {\n                setMovies(await getSearchQuery(movieSearch));\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n        renderMovies();\n    }, [movieSearch]);\n    \n    const location = useLocation();\n\n    return (\n        <div className={css.list}>\n            <form onSubmit={submit}>\n                <input className={css.input} type=\"text\" value={query} onChange={onChange}/>\n                <button className={css.button} type=\"submit\">Search</button>\n            </form>\n            {loading && <Loader />}\n            {query === '' &&  movies.length === 0 && <h2>No movies found for your search query</h2> }\n            {movies && (\n                <ul className={css.movies}>\n                    {movies.map(({ id, title }) => (\n                        <li key={id} className={css.item} >\n                            <Link className={css.link} to={`/movies/${id}`} state={{ from: location }}>{title}</Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '2e3720a8bccf444312af356dec280511';\n\nexport const getTrending = async () => {\n    const { data } = await axios.get(`${URL}trending/movie/day?api_key=${KEY}&language=en-US`);\n    return data.results;\n};\n\nexport const getSearchQuery = async (query) => {\n    const { data } = await axios.get(`${URL}/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`);\n    return data.results;\n};\n\nexport const getDetails = async (id) => {\n    const { data } = await axios.get(`${URL}movie/${id}?api_key=${KEY}&language=en-US`);\n    return data;\n};\n\nexport const geCast = async (id) => {\n    const { data } = await axios.get(`${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`);\n    return data.cast;\n};\n\nexport const getReview = async (id) => {\n    const { data } = await axios.get(`${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n    return data.results;\n};"],"names":["useState","movies","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","loading","setLoading","movieSearch","get","useEffect","getSearchQuery","console","log","renderMovies","location","useLocation","className","css","onSubmit","e","preventDefault","type","value","onChange","currentTarget","toLowerCase","Loader","length","map","id","title","to","state","from","URL","KEY","getTrending","axios","data","results","getDetails","geCast","cast","getReview"],"sourceRoot":""}